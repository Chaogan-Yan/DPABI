function varargout = DPARSF_main(varargin)
% DPARSF_MAIN MATLAB code for DPARSF_main.fig
%      DPARSF_MAIN, by itself, creates a new DPARSF_MAIN or raises the existing
%      singleton*.
%
%      H = DPARSF_MAIN returns the handle to a new DPARSF_MAIN or the handle to
%      the existing singleton*.
%
%      DPARSF_MAIN('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in DPARSF_MAIN.M with the given input arguments.
%
%      DPARSF_MAIN('Property','Value',...) creates a new DPARSF_MAIN or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before DPARSF_main_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to DPARSF_main_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help DPARSF_main

% Last Modified by GUIDE v2.5 13-Dec-2018 07:31:51

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @DPARSF_main_OpeningFcn, ...
                   'gui_OutputFcn',  @DPARSF_main_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before DPARSF_main is made visible.
function DPARSF_main_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to DPARSF_main (see VARARGIN)

% Choose default command line output for DPARSF_main

handles.output = hObject;

axes(handles.axes_logo);
axis image;
% imshow('DPARSF_main.png');

DPABIPath=fileparts(which('dpabi.m'));
if isunix&&(~ismac) %Linux has a alpha chanel problem, thus use a special logo image only for linux
    
    imshow(fullfile(DPABIPath, 'Logo', '.linux.DPARSF.png'));
else
    [A, map, alpha] = imread(fullfile(DPABIPath, 'Logo', 'DPARSF.png'));
    h = imshow(A, map);
    set(h, 'AlphaData', alpha);
end

set(handles.figureDPARSFmain,'Name','DPARSF');

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes DPARSF_main wait for user response (see UIRESUME)
% uiwait(handles.figureDPARSFmain);


% --- Outputs from this function are returned to the command line.
function varargout = DPARSF_main_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in pushbutton_DPARSFA.
function pushbutton_DPARSFA_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_DPARSFA (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
DPARSFA


% --- Executes on button press in pushbutton_DPARSFB.
function pushbutton_DPARSFB_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_DPARSFB (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
DPARSF


% --- Executes on button press in pushbutton_DPARSFMonkey.
function pushbutton_DPARSFMonkey_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_DPARSFMonkey (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

uiwait(msgbox('The monkey module is based on Rhesus Macaque Atlases for functional and structural imaging studies generated by Wisconsin ADRC Imaging Core. Please cite these papers when appropriate: McLaren, D.G., Kosmatka, K.J., Oakes, T.R., Kroenke, C.D., Kohama, S.G., Matochik, J.A., Ingram, D.K., Johnson, S.C., 2009. A population-average MRI-based atlas collection of the rhesus macaque. Neuroimage 45, 52-59.; McLaren, D.G., Kosmatka, K.J., Kastman, E.K., Bendlin, B.B., Johnson, S.C., 2010. Rhesus macaque brain morphometry: a methodological comparison of voxel-wise approaches. Methods 50, 157-165.'));

button = questdlg('The origin of monkey atlas is different from human MNI atlas. Please make sure you are setting the correct origin for "reorienting Fun*" and "reorienting T1*". Do you want to have a look on the origin of monkey atlas?','Origin','Yes','No','No');
if strcmpi(button,'Yes')
    [DPABIPath, fileN, extn] = fileparts(which('DPABI.m'));
    TemplatePath=fullfile(DPABIPath, 'Templates');
    global st; clear st; %YAN Chao-Gan, 180801. In case there was some st struture remain.
    uiwait(w_Call_DPABI_VIEW([],[],[],[],[],[TemplatePath,filesep,'WisconsinRhesusMacaqueAtlases',filesep,'112RM-SL_T1.nii']));
end

[ProgramPath, fileN, extn] = fileparts(which('DPARSFA.m'));
DPARSFA([ProgramPath,filesep,'Jobmats',filesep,'Template_MonkeyProcessing.mat']);


% --- Executes on button press in pushbutton_DPARSFMonkey.
function pushbutton_DPARSFRat_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_DPARSFMonkey (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

uiwait(msgbox('The Rat module is based on a Rat T2 template generated by Dr. Adam J. Schwarz et al. Please cite this paper when appropriate: Schwarz, A.J., Danckaert, A., Reese, T., Gozzi, A., Paxinos, G., Watson, C., Merlo-Pich, E.V., Bifone, A., 2006. A stereotaxic MRI template set for the rat brain with tissue class distribution maps and co-registered anatomical atlas: application to pharmacological MRI. Neuroimage 32, 538-550. (A T1 template was included as well. It''s generated by normalizing 50 rats (two scans at PND45 or PND60) to that T2 template and then averaging (by Dr. Chao-Gan Yan)). '));

button = questdlg('Please make sure you are setting the correct origin of Rat atlas for "reorienting Fun*" and "reorienting T1*". Do you want to have a look on the origin of Rat atlas?','Origin','Yes','No','No');
if strcmpi(button,'Yes')
    [DPABIPath, fileN, extn] = fileparts(which('DPABI.m'));
    TemplatePath=fullfile(DPABIPath, 'Templates');
    global st; clear st; %YAN Chao-Gan, 180801. In case there was some st struture remain.
    uiwait(w_Call_DPABI_VIEW([],[],[],[],[],[TemplatePath,filesep,'SchwarzRatTemplates',filesep,'rat97t2w_96x96x30.v6.nii']));
end

msgbox('If you used DPARSF Rat module, please cite: Yan, C.G., Rincon-Cortes, M., Raineki, C., Sarro, E., Colcombe, S., Guilfoyle, D.N., Yang, Z., Gerum, S., Biswal, B.B., Milham, M.P., Sullivan, R.M., Castellanos, F.X., 2016. Aberrant development of intrinsic brain activity in a rat model of caregiver maltreatment of offspring. Transl Psychiatry 6, e?. doi:10.1038/tp.2016.276');

[ProgramPath, fileN, extn] = fileparts(which('DPARSFA.m'));
DPARSFA([ProgramPath,filesep,'Jobmats',filesep,'Template_RatProcessing.mat']);


% --- Executes on button press in pushbutton_TfMRIPreprocessing.
function pushbutton_TfMRIPreprocessing_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_TfMRIPreprocessing (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
[ProgramPath, fileN, extn] = fileparts(which('DPARSFA.m'));
DPARSFA([ProgramPath,filesep,'Jobmats',filesep,'Template_TaskfMRIPreprocessing.mat']);


% --- Executes on button press in pushbutton_VBM.
function pushbutton_VBM_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_VBM (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
[ProgramPath, fileN, extn] = fileparts(which('DPARSFA.m'));
DPARSFA([ProgramPath,filesep,'Jobmats',filesep,'Template_VBM_NewSegmentDARTEL.mat']);

